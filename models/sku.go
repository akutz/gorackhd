package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"
)

/*sku Sku sku

swagger:model sku
*/
type Sku struct {

	/* DiscoveryGraphName discovery graph name
	 */
	DiscoveryGraphName *string `json:"discoveryGraphName,omitempty"`

	/* DiscoveryGraphOptions discovery graph options
	 */
	DiscoveryGraphOptions interface{} `json:"discoveryGraphOptions,omitempty"`

	/* ID id
	 */
	ID *string `json:"id,omitempty"`

	/* Name name
	 */
	Name *string `json:"name,omitempty"`

	/* Nodes nodes
	 */
	Nodes []*Node `json:"nodes,omitempty"`

	/* Rules rules
	 */
	Rules interface{} `json:"rules,omitempty"`
}

// Validate validates this sku
func (m *Sku) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNodes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Sku) validateNodes(formats strfmt.Registry) error {

	if swag.IsZero(m.Nodes) { // not required
		return nil
	}

	for i := 0; i < len(m.Nodes); i++ {

		if m.Nodes[i] != nil {

			if err := m.Nodes[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
