package get

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/emccode/gorackhd/models"
)

type GetSkusReader struct {
	formats strfmt.Registry
}

func (o *GetSkusReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSkusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetSkusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetSkusOK creates a GetSkusOK with default headers values
func NewGetSkusOK() *GetSkusOK {
	return &GetSkusOK{}
}

/*GetSkusOK

list of skus

*/
type GetSkusOK struct {
	Payload GetSkusOKBodyBody
}

func (o *GetSkusOK) Error() string {
	return fmt.Sprintf("[GET /skus][%d] getSkusOK  %+v", 200, o.Payload)
}

func (o *GetSkusOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetSkusDefault creates a GetSkusDefault with default headers values
func NewGetSkusDefault(code int) *GetSkusDefault {
	return &GetSkusDefault{
		_statusCode: code,
	}
}

/*GetSkusDefault

Unexpected error
*/
type GetSkusDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get skus default response
func (o *GetSkusDefault) Code() int {
	return o._statusCode
}

func (o *GetSkusDefault) Error() string {
	return fmt.Sprintf("[GET /skus][%d] GetSkus default  %+v", o._statusCode, o.Payload)
}

func (o *GetSkusDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

/*GetSkusOKBodyBody GetSkusOKBodyBody get skus o k body body

swagger:model GetSkusOKBodyBody
*/
type GetSkusOKBodyBody interface{}
