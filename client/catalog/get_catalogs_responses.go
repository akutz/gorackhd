package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/emccode/gorackhd/models"
)

type GetCatalogsReader struct {
	formats strfmt.Registry
}

func (o *GetCatalogsReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCatalogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetCatalogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetCatalogsOK creates a GetCatalogsOK with default headers values
func NewGetCatalogsOK() *GetCatalogsOK {
	return &GetCatalogsOK{}
}

/*GetCatalogsOK

An array of catalogs
*/
type GetCatalogsOK struct {
	Payload []*models.Catalog
}

func (o *GetCatalogsOK) Error() string {
	return fmt.Sprintf("[GET /catalogs][%d] getCatalogsOK  %+v", 200, o.Payload)
}

func (o *GetCatalogsOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetCatalogsDefault creates a GetCatalogsDefault with default headers values
func NewGetCatalogsDefault(code int) *GetCatalogsDefault {
	return &GetCatalogsDefault{
		_statusCode: code,
	}
}

/*GetCatalogsDefault

Unexpected error
*/
type GetCatalogsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get catalogs default response
func (o *GetCatalogsDefault) Code() int {
	return o._statusCode
}

func (o *GetCatalogsDefault) Error() string {
	return fmt.Sprintf("[GET /catalogs][%d] GetCatalogs default  %+v", o._statusCode, o.Payload)
}

func (o *GetCatalogsDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
